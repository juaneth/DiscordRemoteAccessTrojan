"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const request = require('request-promise-native');
const lib_1 = require("./lib");
exports.postRequest = (path = '', params) => new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
    const options = lib_1.getOptions('POST', params);
    if (path === '') {
        return reject(new Error('No path provided!'));
    }
    let response;
    try {
        response = yield request(path, options);
    }
    catch (e) {
        if (e.statusCode && e.statusCode === 404) {
            return reject(new Error('Error 404, not found'));
        }
        return reject(new Error(e));
    }
    lib_1.handleResponse(response, resolve, reject);
}));
